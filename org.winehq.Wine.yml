id: org.winehq.Wine
sdk: org.freedesktop.Sdk
runtime: org.freedesktop.Platform
runtime-version: '20.08'
finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --device=all
  - --socket=pulseaudio
  - --share=network
  - --allow=multiarch
  - --allow=devel
  - --system-talk-name=org.freedesktop.UDisks2
  - --system-talk-name=org.freedesktop.NetworkManager
  - --filesystem=xdg-desktop
  - --filesystem=xdg-documents
  - --filesystem=xdg-pictures
  - --filesystem=xdg-music
  - --filesystem=xdg-videos
  - --filesystem=xdg-download
  - --env=WINEDLLPATH=/app/dlls/lib32:/app/dlls/lib:/app/lib32/wine/wined3d:/app/lib/wine/wined3d
  - --env=WINEPREFIX=/var/data/wine
  - --env=GST_PLUGIN_SYSTEM_PATH=/app/lib32/gstreamer-1.0:/app/lib/gstreamer-1.0:/usr/lib/i386-linux-gnu/gstreamer-1.0:/usr/lib/x86_64-linux-gnu/gstreamer-1.0
command: wine
rename-desktop-file: wine.desktop
rename-icon: wine

add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: "20.08"

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: "20.08"
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: "1.4"
    versions: "20.08;1.4"
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d
    download-if: active-gl-driver
    enable-if: active-gl-driver

  org.freedesktop.Platform.VAAPI.Intel.i386:
    directory: lib/i386-linux-gnu/dri/intel-vaapi-driver
    version: "20.08"
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    download-if: active-gl-driver
    enable-if: active-gl-driver

  org.freedesktop.Platform.ffmpeg-full:
    directory: lib/ffmpeg
    add-ld-path: "."
    version: "20.08"
    autodelete: false

  org.freedesktop.Platform.ffmpeg_full.i386:
    directory: lib32/ffmpeg
    add-ld-path: "."
    version: "20.08"
    autodelete: false

  org.winehq.Wine.gecko:
    directory: share/wine/gecko

  org.winehq.Wine.mono:
    directory: share/wine/mono

  org.winehq.Wine.DLLs:
    directory: dlls
    subdirectories: true
    merge-dirs: lib;lib32;

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.mingw-w64

build-options:
  append-path: /usr/lib/sdk/mingw-w64/bin

x-compat-i386-opts: &compat_i386_opts
  prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
  ldflags: -L/app/lib32
  append-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: ccache i686-unknown-linux-gnu-gcc
    CXX: ccache i686-unknown-linux-gnu-g++
  libdir: /app/lib32

separate-locales: false
cleanup:
  - '*.a'
  - '*.la'
  - /share/man

  - /bin/function_grep.pl
  - /bin/widl
  - /bin/winecpp
  - /bin/winedump
  - /bin/wineg++
  - /bin/winegcc
  - /bin/winemaker
  - /bin/wmc
  - /bin/wrc

  - /lib/wine/*.def
  - /lib32/wine/*.def
cleanup-commands:
  - mkdir -p ${FLATPAK_DEST}/lib{,32}/ffmpeg
modules:

  # Native arch build

  - name: wine
    build-options:
      arch:
        x86_64:
          config-opts:
            - --enable-win64
            - --with-mingw=ccache x86_64-w64-mingw32-gcc
          libdir: /app/lib
      env:
        LIBDIR: lib
    config-opts: &wine-config-opts
      - --disable-win16
      - --disable-tests
      - --with-x
      - --with-pulse
      - --with-dbus
      - --without-hal
      - --without-oss
    make-install-args: &wine-make-install-args
      - LDCONFIG=/bin/true
      - UPDATE_DESKTOP_DATABASE=/bin/true
      - INSTALL_PROGRAM_FLAGS=-s
    post-install:
      - &wine-post-install |
        set -e
        mkdir -p /app/$LIBDIR/wine/wined3d
        for lib in dxgi d3d9 d3d10 d3d10core d3d10_1 d3d11; do
          for ext in dll dll.so; do
            lib_file=/app/$LIBDIR/wine/$lib.$ext
            if [ -f $lib_file ]; then
              mv -v $lib_file /app/$LIBDIR/wine/wined3d/
            fi
          done
        done
    sources: &wine-sources
      - type: archive
        url: https://dl.winehq.org/wine/source/6.0/wine-6.0.tar.xz
        sha256: b493065f2f83ee429c62e2ec58698a3cf63ef78722e1b20765823152e8582c56
        x-checker-data:
          type: html
          url: https://dl.winehq.org/wine/source/6.0/
          url-pattern: (wine-[\d\w\.-]+.tar.xz)
          version-pattern: wine-([\d\w\.-]+).tar.xz

  # 32-bit compatibility build

  - name: wine-32bit
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --bindir=${FLATPAK_DEST}/bin32
        - --with-mingw=ccache i686-w64-mingw32-gcc
      env:
        LIBDIR: lib32
    config-opts: *wine-config-opts
    make-install-args: *wine-make-install-args
    post-install:
      - mv ${FLATPAK_DEST}/bin32/wine{,-preloader} ${FLATPAK_DEST}/bin/
      - *wine-post-install
    sources: *wine-sources
    cleanup:
      - /bin32

  # Flatpak bundle

  - name: bundle-setup
    buildsystem: simple
    build-commands:
      - install -Dm644 -t ${FLATPAK_DEST}/etc ld.so.conf
      - mkdir -p ${FLATPAK_DEST}/{,lib/debug/}lib/i386-linux-gnu/GL
      - mkdir -p ${FLATPAK_DEST}/share/wine/{gecko,mono}
      - mkdir -p ${FLATPAK_DEST}/dlls
      - install -Dm644 ${FLATPAK_ID}.appdata.xml -t ${FLATPAK_DEST}/share/appdata
      - |
        icondir=${FLATPAK_DEST}/share/icons/hicolor
        install -Dm644 wine-logo.svg ${icondir}/scalable/apps/wine.svg
        for s in 64 128 256; do
          mkdir -p ${icondir}/${s}x${s}/apps
          rsvg-convert -h ${s} -a -o ${icondir}/${s}x${s}/apps/wine.png ${icondir}/scalable/apps/wine.svg
        done
    sources:
      - type: file
        path: ld.so.conf
      - type: file
        path: wine-logo.svg
      - type: file
        path: org.winehq.Wine.appdata.xml
