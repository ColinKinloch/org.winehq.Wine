id: org.winehq.Wine
branch: "4.8-staging"
sdk: org.freedesktop.Sdk
runtime: org.freedesktop.Platform
runtime-version: "19.08"
finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --device=all
  - --socket=pulseaudio
  - --share=network
  - --allow=multiarch
  - --allow=devel
  - --env=WINEPREFIX=/var/data/wine
command: wine
rename-desktop-file: wine.desktop
add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: "19.08"

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: "19.08"
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: "1.4"
    versions: "19.08;1.6;1.4"
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;
    download-if: active-gl-driver
    enable-if: active-gl-driver

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386

x-compat-i386-opts: &compat_i386_opts
  prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
  append-ld-library-path: /usr/lib/i386-linux-gnu
  append-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: i686-unknown-linux-gnu-gcc
    CXX: i686-unknown-linux-gnu-g++
  libdir: /app/lib32

cleanup:
  - "*.a"
  - "*.la"
  - /include
  - /lib/pkgconfig
  - /lib/cmake
  - /share/man
modules:

  - name: wine
    build-options:
      arch:
        x86_64:
          config-opts:
            - --enable-win64
          libdir: /app/lib
    config-opts: &wine_common_opts
      - --disable-win16
      - --disable-tests
      - --with-x
      - --with-pulse
      - --with-dbus
      - --without-hal
    make-install-args: &wine_common_make_install_args
      - LDCONFIG=/bin/true
      - STRIP=/bin/true
      - UPDATE_DESKTOP_DATABASE=/bin/true
    post-install:
      - |
        case $FLATPAK_ARCH in
          x86_64)
            mv $FLATPAK_DEST/bin/wineserver{,64}
          ;;
          i386)
            mv $FLATPAK_DEST/bin/wineserver{,32}
          ;;
        esac
    sources: &wine_sources
      - type: archive
        url: "https://dl.winehq.org/wine/source/4.x/wine-4.8.tar.xz"
        sha256: 48b9ab1c1277e13eede66e1af1f9f885cb8b4c5cb53eea6ebbfe10bc06dfa135
      - type: archive
        url: "https://github.com/wine-staging/wine-staging/archive/v4.8.tar.gz"
        sha256: 880170682119a539ca51c5e8c188f3896f4d5d8a295d0d0fd03d23ed79372415
        dest: staging
      - type: shell
        commands:
          - ./staging/patches/patchinstall.sh DESTDIR="$(pwd)" --all
    modules:

      - name: vkd3d
        sources: &vkd3d_sources
          - type: archive
            url: "https://dl.winehq.org/vkd3d/source/vkd3d-1.1.tar.xz"
            sha256: 495adc61cc80c65d54b2f5b52092ea05d3797cc2c17a610f0fc98457d2f56ab6
        modules:

          - name: SPIRV-Headers
            buildsystem: cmake-ninja
            sources:
              - type: git
                url: "https://github.com/KhronosGroup/SPIRV-Headers.git"
                commit: 8bea0a266ac9b718aa0818d9e3a47c0b77c2cb23

  - name: wine-32bit
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      #FIXME: remove it once the cross-linker if fixed
      ldflags: -Wl,-rpath-link,/usr/lib/i386-linux-gnu/pulseaudio
    config-opts: *wine_common_opts
    make-install-args: *wine_common_make_install_args
    post-install:
      - mv $FLATPAK_DEST/bin/wineserver{,32}
    sources: *wine_sources
    modules:

      - name: vkd3d-32bit
        build-options:
          arch:
            x86_64: *compat_i386_opts
        sources: *vkd3d_sources

  - name: wineserver
    buildsystem: simple
    build-commands:
      - |
        case $FLATPAK_ARCH in
          x86_64)
            ln -s wineserver64 $FLATPAK_DEST/bin/wineserver
          ;;
          i386)
            ln -s wineserver32 $FLATPAK_DEST/bin/wineserver
          ;;
        esac

  - name: compat32
    only-arches:
      - "x86_64"
    buildsystem: simple
    build-commands:
      - mkdir -p /app/lib/i386-linux-gnu
      - install -Dm644 ld.so.conf -t /app/etc/
    sources:
      - type: file
        path: ld.so.conf
